# building:
# sudo docker build -t haskell-build-ghcjs-runner-arch -f Dockerfile_arch .
# running:
# sudo docker run -d --name gitlab-runner --restart always -u root -v /srv/gitlab-runner/config:/etc/gitlab-runner haskell-build-ghcjs-runner-arch

# post install: add -fno-warn-tabs to .stack/programs/*/ghcjs-*/bin/ghcjs

FROM base/archlinux

RUN pacman -Sy --noconfirm archlinux-keyring
RUN pacman -S --noconfirm pacman
RUN pacman-db-upgrade
RUN pacman -Su --noconfirm autoconf gcc make alex happy git binutils pkg-config ghc stack sdl2 openal ffmpeg nasm automake nodejs npm sudo fakeroot patch pandoc vulkan-icd-loader

# install gitlab-ci-multi-runner
RUN curl -Lo /usr/bin/gitlab-ci-multi-runner https://gitlab-ci-multi-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-ci-multi-runner-linux-amd64 \
	&& chmod +x /usr/bin/gitlab-ci-multi-runner \
	&& useradd -m -s /bin/bash gitlab-runner

# script for installing from AUR
COPY aur_install.sh aur_install.sh

# ncurses5-compat-libs
# using own copy of PKGBUILD as one on AUR is broken
COPY ncurses5-compat-libs ncurses5-compat-libs
RUN ./aur_install.sh ncurses5-compat-libs

# libtinfo from AUR
RUN ./aur_install.sh libtinfo

# android stuff from AUR
RUN ./aur_install.sh android-sdk
RUN ./aur_install.sh android-ndk
RUN ./aur_install.sh android-sdk-build-tools
RUN ./aur_install.sh android-sdk-platform-tools
RUN ./aur_install.sh android-platform

# uglify-js
RUN npm install -g uglify-js
# minifyjs script
RUN /bin/echo -e '#!/bin/sh\nuglifyjs $1 --screw-ie8 --mangle --compress --wrap $1 --output $2' > /bin/minifyjs && chmod +x /bin/minifyjs

# add local bin to profile
RUN /bin/echo -e '#!/bin/sh\nexport PATH=$PATH:$HOME/.local/bin' > /etc/profile.d/localbin.sh

# set locale (otherwise haddock may fail with hGetContents: invalid argument error)
RUN /bin/echo -e 'LANG=en_US.UTF-8\n' > /etc/locale.conf

# following installations doesn't require root
USER gitlab-runner
WORKDIR /home/gitlab-runner

# add config.yaml
RUN mkdir .stack && /bin/echo -e 'build:\n  split-objs: true\n' > .stack/config.yaml

# install ghcjs
COPY ghcjs-setup.yaml ghcjs-setup.yaml
RUN stack setup --stack-yaml ghcjs-setup.yaml

# patch ghcjs script to add some options
COPY ghcjs.patch ghcjs.patch
RUN patch .stack/programs/x86_64-linux/ghcjs-0.2.0_ghc-8.0.1/bin/ghcjs < ghcjs.patch

# install hscolour for haddocks, and hlint
RUN stack install --resolver nightly-2016-08-26 hscolour hlint

# install butler
RUN curl -Lo /home/gitlab-runner/.local/bin/butler https://dl.itch.ovh/butler/linux-amd64/head/butler \
	&& chmod +x /home/gitlab-runner/.local/bin/butler
# copy butler credentials
COPY butler_creds /home/gitlab-runner/.config/itch/butler_creds

# finalize
CMD ["gitlab-ci-multi-runner", "run", "--user=gitlab-runner", "--working-directory=/home/gitlab-runner"]
VOLUME ["/etc/gitlab-runner"]
