# building:
# sudo docker build -t haskell-build-ghcjs-runner-arch -f Dockerfile_arch .
# running:
# sudo docker run -d --name gitlab-runner --restart always -u root -v /srv/gitlab-runner/config:/etc/gitlab-runner haskell-build-ghcjs-runner-arch

FROM base/archlinux

RUN pacman -Sy --noconfirm archlinux-keyring
RUN pacman -Su --noconfirm
RUN pacman-db-upgrade
RUN pacman -S --noconfirm autoconf gcc make alex happy git binutils pkg-config ghc stack sdl2 automake nodejs npm sudo fakeroot

# install gitlab-ci-multi-runner
RUN curl -Lo /usr/bin/gitlab-ci-multi-runner https://gitlab-ci-multi-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-ci-multi-runner-linux-amd64
RUN chmod +x /usr/bin/gitlab-ci-multi-runner
RUN useradd -m -s /bin/bash gitlab-runner

# libtinfo from AUR
RUN git clone https://aur.archlinux.org/libtinfo.git \
	&& chmod a+rw libtinfo \
	&& cd libtinfo \
	&& sudo -u nobody makepkg -c \
	&& pacman -U --noconfirm libtinfo-*.pkg.tar.xz \
	&& cd .. \
	&& rm -rf libtinfo

# uglify-js
RUN npm install -g uglify-js
# minifyjs script
RUN /bin/echo -e '#!/bin/sh\nuglifyjs $1 --screw-ie8 --mangle --compress --wrap $1 --output $2' > /bin/minifyjs && chmod +x /bin/minifyjs

# add local bin to profile
RUN /bin/echo -e '#!/bin/sh\nexport PATH=$PATH:$HOME/.local/bin' > /etc/profile.d/localbin.sh

# following installations doesn't require root
USER gitlab-runner
WORKDIR /home/gitlab-runner

# install ghcjs
COPY ghcjs-setup.yaml ghcjs-setup.yaml
RUN stack setup --stack-yaml ghcjs-setup.yaml

# install hscolour for haddocks, and hlint
RUN stack install hscolour hlint

# finalize
CMD ["gitlab-ci-multi-runner", "run", "--user=gitlab-runner", "--working-directory=/home/gitlab-runner"]
VOLUME ["/etc/gitlab-runner"]
